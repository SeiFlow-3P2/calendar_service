// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: calendar.proto

package calendar_v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateCalendarRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCalendarRequest) Reset() {
	*x = CreateCalendarRequest{}
	mi := &file_calendar_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCalendarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCalendarRequest) ProtoMessage() {}

func (x *CreateCalendarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCalendarRequest.ProtoReflect.Descriptor instead.
func (*CreateCalendarRequest) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCalendarRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCalendarRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CalendarResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EventsId      []string               `protobuf:"bytes,4,rep,name=events_id,json=eventsId,proto3" json:"events_id,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CalendarResponse) Reset() {
	*x = CalendarResponse{}
	mi := &file_calendar_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalendarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalendarResponse) ProtoMessage() {}

func (x *CalendarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalendarResponse.ProtoReflect.Descriptor instead.
func (*CalendarResponse) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{1}
}

func (x *CalendarResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CalendarResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CalendarResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CalendarResponse) GetEventsId() []string {
	if x != nil {
		return x.EventsId
	}
	return nil
}

func (x *CalendarResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CalendarResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetCalendarsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCalendarsRequest) Reset() {
	*x = GetCalendarsRequest{}
	mi := &file_calendar_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCalendarsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCalendarsRequest) ProtoMessage() {}

func (x *GetCalendarsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCalendarsRequest.ProtoReflect.Descriptor instead.
func (*GetCalendarsRequest) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{2}
}

func (x *GetCalendarsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetCalendarsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Calendars     []*CalendarResponse    `protobuf:"bytes,1,rep,name=calendars,proto3" json:"calendars,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCalendarsResponse) Reset() {
	*x = GetCalendarsResponse{}
	mi := &file_calendar_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCalendarsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCalendarsResponse) ProtoMessage() {}

func (x *GetCalendarsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCalendarsResponse.ProtoReflect.Descriptor instead.
func (*GetCalendarsResponse) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{3}
}

func (x *GetCalendarsResponse) GetCalendars() []*CalendarResponse {
	if x != nil {
		return x.Calendars
	}
	return nil
}

type GetCalendarInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCalendarInfoRequest) Reset() {
	*x = GetCalendarInfoRequest{}
	mi := &file_calendar_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCalendarInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCalendarInfoRequest) ProtoMessage() {}

func (x *GetCalendarInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCalendarInfoRequest.ProtoReflect.Descriptor instead.
func (*GetCalendarInfoRequest) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{4}
}

func (x *GetCalendarInfoRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateCalendarRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Id            string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCalendarRequest) Reset() {
	*x = UpdateCalendarRequest{}
	mi := &file_calendar_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCalendarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCalendarRequest) ProtoMessage() {}

func (x *UpdateCalendarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCalendarRequest.ProtoReflect.Descriptor instead.
func (*UpdateCalendarRequest) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateCalendarRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateCalendarRequest) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

type DeleteCalendarRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCalendarRequest) Reset() {
	*x = DeleteCalendarRequest{}
	mi := &file_calendar_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCalendarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCalendarRequest) ProtoMessage() {}

func (x *DeleteCalendarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCalendarRequest.ProtoReflect.Descriptor instead.
func (*DeleteCalendarRequest) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteCalendarRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateEventRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Title         string                  `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	StartTime     string                  `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       string                  `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Location      *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	CalendarId    string                  `protobuf:"bytes,6,opt,name=calendar_id,json=calendarId,proto3" json:"calendar_id,omitempty"`
	CategoryId    string                  `protobuf:"bytes,7,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEventRequest) Reset() {
	*x = CreateEventRequest{}
	mi := &file_calendar_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEventRequest) ProtoMessage() {}

func (x *CreateEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEventRequest.ProtoReflect.Descriptor instead.
func (*CreateEventRequest) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{7}
}

func (x *CreateEventRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateEventRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateEventRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *CreateEventRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *CreateEventRequest) GetLocation() *wrapperspb.StringValue {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *CreateEventRequest) GetCalendarId() string {
	if x != nil {
		return x.CalendarId
	}
	return ""
}

func (x *CreateEventRequest) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

type EventResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Id            string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	StartTime     string                  `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       string                  `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Location      *wrapperspb.StringValue `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
	CalendarId    string                  `protobuf:"bytes,7,opt,name=calendar_id,json=calendarId,proto3" json:"calendar_id,omitempty"`
	CategoryId    string                  `protobuf:"bytes,8,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	CreatedAt     string                  `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                  `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventResponse) Reset() {
	*x = EventResponse{}
	mi := &file_calendar_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventResponse) ProtoMessage() {}

func (x *EventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventResponse.ProtoReflect.Descriptor instead.
func (*EventResponse) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{8}
}

func (x *EventResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EventResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EventResponse) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *EventResponse) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *EventResponse) GetLocation() *wrapperspb.StringValue {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *EventResponse) GetCalendarId() string {
	if x != nil {
		return x.CalendarId
	}
	return ""
}

func (x *EventResponse) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *EventResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *EventResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type UpdateEventRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Id            string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	StartTime     *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Location      *wrapperspb.StringValue `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
	CategoryId    *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateEventRequest) Reset() {
	*x = UpdateEventRequest{}
	mi := &file_calendar_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEventRequest) ProtoMessage() {}

func (x *UpdateEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEventRequest.ProtoReflect.Descriptor instead.
func (*UpdateEventRequest) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateEventRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateEventRequest) GetTitle() *wrapperspb.StringValue {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *UpdateEventRequest) GetDescription() *wrapperspb.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *UpdateEventRequest) GetStartTime() *wrapperspb.StringValue {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *UpdateEventRequest) GetEndTime() *wrapperspb.StringValue {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *UpdateEventRequest) GetLocation() *wrapperspb.StringValue {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *UpdateEventRequest) GetCategoryId() *wrapperspb.StringValue {
	if x != nil {
		return x.CategoryId
	}
	return nil
}

type DeleteEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteEventRequest) Reset() {
	*x = DeleteEventRequest{}
	mi := &file_calendar_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEventRequest) ProtoMessage() {}

func (x *DeleteEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEventRequest.ProtoReflect.Descriptor instead.
func (*DeleteEventRequest) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteEventRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CalendarId    string                 `protobuf:"bytes,1,opt,name=calendar_id,json=calendarId,proto3" json:"calendar_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventsRequest) Reset() {
	*x = GetEventsRequest{}
	mi := &file_calendar_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsRequest) ProtoMessage() {}

func (x *GetEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsRequest.ProtoReflect.Descriptor instead.
func (*GetEventsRequest) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{11}
}

func (x *GetEventsRequest) GetCalendarId() string {
	if x != nil {
		return x.CalendarId
	}
	return ""
}

type GetEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*EventResponse       `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventsResponse) Reset() {
	*x = GetEventsResponse{}
	mi := &file_calendar_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsResponse) ProtoMessage() {}

func (x *GetEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsResponse.ProtoReflect.Descriptor instead.
func (*GetEventsResponse) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{12}
}

func (x *GetEventsResponse) GetEvents() []*EventResponse {
	if x != nil {
		return x.Events
	}
	return nil
}

type CreateEventCategoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Color         string                 `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEventCategoryRequest) Reset() {
	*x = CreateEventCategoryRequest{}
	mi := &file_calendar_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEventCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEventCategoryRequest) ProtoMessage() {}

func (x *CreateEventCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEventCategoryRequest.ProtoReflect.Descriptor instead.
func (*CreateEventCategoryRequest) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{13}
}

func (x *CreateEventCategoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateEventCategoryRequest) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *CreateEventCategoryRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type EventCategoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Color         string                 `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	UserId        string                 `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventCategoryResponse) Reset() {
	*x = EventCategoryResponse{}
	mi := &file_calendar_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCategoryResponse) ProtoMessage() {}

func (x *EventCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCategoryResponse.ProtoReflect.Descriptor instead.
func (*EventCategoryResponse) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{14}
}

func (x *EventCategoryResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventCategoryResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventCategoryResponse) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *EventCategoryResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UpdateEventCategoryRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Id            string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Color         *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateEventCategoryRequest) Reset() {
	*x = UpdateEventCategoryRequest{}
	mi := &file_calendar_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEventCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEventCategoryRequest) ProtoMessage() {}

func (x *UpdateEventCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEventCategoryRequest.ProtoReflect.Descriptor instead.
func (*UpdateEventCategoryRequest) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateEventCategoryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateEventCategoryRequest) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *UpdateEventCategoryRequest) GetColor() *wrapperspb.StringValue {
	if x != nil {
		return x.Color
	}
	return nil
}

type DeleteEventCategoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteEventCategoryRequest) Reset() {
	*x = DeleteEventCategoryRequest{}
	mi := &file_calendar_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEventCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEventCategoryRequest) ProtoMessage() {}

func (x *DeleteEventCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEventCategoryRequest.ProtoReflect.Descriptor instead.
func (*DeleteEventCategoryRequest) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteEventCategoryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetCategoriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCategoriesRequest) Reset() {
	*x = GetCategoriesRequest{}
	mi := &file_calendar_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCategoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoriesRequest) ProtoMessage() {}

func (x *GetCategoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoriesRequest.ProtoReflect.Descriptor instead.
func (*GetCategoriesRequest) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{17}
}

func (x *GetCategoriesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetCategoriesResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Categories    []*EventCategoryResponse `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCategoriesResponse) Reset() {
	*x = GetCategoriesResponse{}
	mi := &file_calendar_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCategoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoriesResponse) ProtoMessage() {}

func (x *GetCategoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoriesResponse.ProtoReflect.Descriptor instead.
func (*GetCategoriesResponse) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{18}
}

func (x *GetCategoriesResponse) GetCategories() []*EventCategoryResponse {
	if x != nil {
		return x.Categories
	}
	return nil
}

var File_calendar_proto protoreflect.FileDescriptor

const file_calendar_proto_rawDesc = "" +
	"\n" +
	"\x0ecalendar.proto\x12\vcalendar_v1\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/api/annotations.proto\"D\n" +
	"\x15CreateCalendarRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"\xaa\x01\n" +
	"\x10CalendarResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x1b\n" +
	"\tevents_id\x18\x04 \x03(\tR\beventsId\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\tR\tupdatedAt\".\n" +
	"\x13GetCalendarsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"S\n" +
	"\x14GetCalendarsResponse\x12;\n" +
	"\tcalendars\x18\x01 \x03(\v2\x1d.calendar_v1.CalendarResponseR\tcalendars\"(\n" +
	"\x16GetCalendarInfoRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"Y\n" +
	"\x15UpdateCalendarRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x120\n" +
	"\x04name\x18\x02 \x01(\v2\x1c.google.protobuf.StringValueR\x04name\"'\n" +
	"\x15DeleteCalendarRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x82\x02\n" +
	"\x12CreateEventRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"start_time\x18\x03 \x01(\tR\tstartTime\x12\x19\n" +
	"\bend_time\x18\x04 \x01(\tR\aendTime\x128\n" +
	"\blocation\x18\x05 \x01(\v2\x1c.google.protobuf.StringValueR\blocation\x12\x1f\n" +
	"\vcalendar_id\x18\x06 \x01(\tR\n" +
	"calendarId\x12\x1f\n" +
	"\vcategory_id\x18\a \x01(\tR\n" +
	"categoryId\"\xcb\x02\n" +
	"\rEventResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"start_time\x18\x04 \x01(\tR\tstartTime\x12\x19\n" +
	"\bend_time\x18\x05 \x01(\tR\aendTime\x128\n" +
	"\blocation\x18\x06 \x01(\v2\x1c.google.protobuf.StringValueR\blocation\x12\x1f\n" +
	"\vcalendar_id\x18\a \x01(\tR\n" +
	"calendarId\x12\x1f\n" +
	"\vcategory_id\x18\b \x01(\tR\n" +
	"categoryId\x12\x1d\n" +
	"\n" +
	"created_at\x18\t \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\n" +
	" \x01(\tR\tupdatedAt\"\x87\x03\n" +
	"\x12UpdateEventRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x122\n" +
	"\x05title\x18\x02 \x01(\v2\x1c.google.protobuf.StringValueR\x05title\x12>\n" +
	"\vdescription\x18\x03 \x01(\v2\x1c.google.protobuf.StringValueR\vdescription\x12;\n" +
	"\n" +
	"start_time\x18\x04 \x01(\v2\x1c.google.protobuf.StringValueR\tstartTime\x127\n" +
	"\bend_time\x18\x05 \x01(\v2\x1c.google.protobuf.StringValueR\aendTime\x128\n" +
	"\blocation\x18\x06 \x01(\v2\x1c.google.protobuf.StringValueR\blocation\x12=\n" +
	"\vcategory_id\x18\a \x01(\v2\x1c.google.protobuf.StringValueR\n" +
	"categoryId\"$\n" +
	"\x12DeleteEventRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"3\n" +
	"\x10GetEventsRequest\x12\x1f\n" +
	"\vcalendar_id\x18\x01 \x01(\tR\n" +
	"calendarId\"G\n" +
	"\x11GetEventsResponse\x122\n" +
	"\x06events\x18\x01 \x03(\v2\x1a.calendar_v1.EventResponseR\x06events\"_\n" +
	"\x1aCreateEventCategoryRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05color\x18\x02 \x01(\tR\x05color\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\"j\n" +
	"\x15EventCategoryResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05color\x18\x03 \x01(\tR\x05color\x12\x17\n" +
	"\auser_id\x18\x04 \x01(\tR\x06userId\"\x92\x01\n" +
	"\x1aUpdateEventCategoryRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x120\n" +
	"\x04name\x18\x02 \x01(\v2\x1c.google.protobuf.StringValueR\x04name\x122\n" +
	"\x05color\x18\x03 \x01(\v2\x1c.google.protobuf.StringValueR\x05color\",\n" +
	"\x1aDeleteEventCategoryRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"/\n" +
	"\x14GetCategoriesRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"[\n" +
	"\x15GetCategoriesResponse\x12B\n" +
	"\n" +
	"categories\x18\x01 \x03(\v2\".calendar_v1.EventCategoryResponseR\n" +
	"categories2\xf3\v\n" +
	"\x0fCalendarService\x12m\n" +
	"\x0eCreateCalendar\x12\".calendar_v1.CreateCalendarRequest\x1a\x1d.calendar_v1.CalendarResponse\"\x18\x82\xd3\xe4\x93\x02\x12:\x01*\"\r/v1/calendars\x12j\n" +
	"\fGetCalendars\x12 .calendar_v1.GetCalendarsRequest\x1a!.calendar_v1.GetCalendarsResponse\"\x15\x82\xd3\xe4\x93\x02\x0f\x12\r/v1/calendars\x12q\n" +
	"\x0fGetCalendarInfo\x12#.calendar_v1.GetCalendarInfoRequest\x1a\x1d.calendar_v1.CalendarResponse\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/v1/calendars/{id}\x12r\n" +
	"\x0eUpdateCalendar\x12\".calendar_v1.UpdateCalendarRequest\x1a\x1d.calendar_v1.CalendarResponse\"\x1d\x82\xd3\xe4\x93\x02\x17:\x01*2\x12/v1/calendars/{id}\x12h\n" +
	"\x0eDeleteCalendar\x12\".calendar_v1.DeleteCalendarRequest\x1a\x16.google.protobuf.Empty\"\x1a\x82\xd3\xe4\x93\x02\x14*\x12/v1/calendars/{id}\x12y\n" +
	"\vCreateEvent\x12\x1f.calendar_v1.CreateEventRequest\x1a\x1a.calendar_v1.EventResponse\"-\x82\xd3\xe4\x93\x02':\x01*\"\"/v1/calendars/{calendar_id}/events\x12f\n" +
	"\vUpdateEvent\x12\x1f.calendar_v1.UpdateEventRequest\x1a\x1a.calendar_v1.EventResponse\"\x1a\x82\xd3\xe4\x93\x02\x14:\x01*2\x0f/v1/events/{id}\x12_\n" +
	"\vDeleteEvent\x12\x1f.calendar_v1.DeleteEventRequest\x1a\x16.google.protobuf.Empty\"\x17\x82\xd3\xe4\x93\x02\x11*\x0f/v1/events/{id}\x12v\n" +
	"\tGetEvents\x12\x1d.calendar_v1.GetEventsRequest\x1a\x1e.calendar_v1.GetEventsResponse\"*\x82\xd3\xe4\x93\x02$\x12\"/v1/calendars/{calendar_id}/events\x12\x88\x01\n" +
	"\x0eCreateCategory\x12'.calendar_v1.CreateEventCategoryRequest\x1a\".calendar_v1.EventCategoryResponse\")\x82\xd3\xe4\x93\x02#:\x01*\"\x1e/v1/users/{user_id}/categories\x12}\n" +
	"\x0eUpdateCategory\x12'.calendar_v1.UpdateEventCategoryRequest\x1a\".calendar_v1.EventCategoryResponse\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*2\x13/v1/categories/{id}\x12n\n" +
	"\x0eDeleteCategory\x12'.calendar_v1.DeleteEventCategoryRequest\x1a\x16.google.protobuf.Empty\"\x1b\x82\xd3\xe4\x93\x02\x15*\x13/v1/categories/{id}\x12~\n" +
	"\rGetCategories\x12!.calendar_v1.GetCategoriesRequest\x1a\".calendar_v1.GetCategoriesResponse\"&\x82\xd3\xe4\x93\x02 \x12\x1e/v1/users/{user_id}/categoriesB4Z2calendar_service/pkg/proto/calendar/v1;calendar_v1b\x06proto3"

var (
	file_calendar_proto_rawDescOnce sync.Once
	file_calendar_proto_rawDescData []byte
)

func file_calendar_proto_rawDescGZIP() []byte {
	file_calendar_proto_rawDescOnce.Do(func() {
		file_calendar_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_calendar_proto_rawDesc), len(file_calendar_proto_rawDesc)))
	})
	return file_calendar_proto_rawDescData
}

var file_calendar_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_calendar_proto_goTypes = []any{
	(*CreateCalendarRequest)(nil),      // 0: calendar_v1.CreateCalendarRequest
	(*CalendarResponse)(nil),           // 1: calendar_v1.CalendarResponse
	(*GetCalendarsRequest)(nil),        // 2: calendar_v1.GetCalendarsRequest
	(*GetCalendarsResponse)(nil),       // 3: calendar_v1.GetCalendarsResponse
	(*GetCalendarInfoRequest)(nil),     // 4: calendar_v1.GetCalendarInfoRequest
	(*UpdateCalendarRequest)(nil),      // 5: calendar_v1.UpdateCalendarRequest
	(*DeleteCalendarRequest)(nil),      // 6: calendar_v1.DeleteCalendarRequest
	(*CreateEventRequest)(nil),         // 7: calendar_v1.CreateEventRequest
	(*EventResponse)(nil),              // 8: calendar_v1.EventResponse
	(*UpdateEventRequest)(nil),         // 9: calendar_v1.UpdateEventRequest
	(*DeleteEventRequest)(nil),         // 10: calendar_v1.DeleteEventRequest
	(*GetEventsRequest)(nil),           // 11: calendar_v1.GetEventsRequest
	(*GetEventsResponse)(nil),          // 12: calendar_v1.GetEventsResponse
	(*CreateEventCategoryRequest)(nil), // 13: calendar_v1.CreateEventCategoryRequest
	(*EventCategoryResponse)(nil),      // 14: calendar_v1.EventCategoryResponse
	(*UpdateEventCategoryRequest)(nil), // 15: calendar_v1.UpdateEventCategoryRequest
	(*DeleteEventCategoryRequest)(nil), // 16: calendar_v1.DeleteEventCategoryRequest
	(*GetCategoriesRequest)(nil),       // 17: calendar_v1.GetCategoriesRequest
	(*GetCategoriesResponse)(nil),      // 18: calendar_v1.GetCategoriesResponse
	(*wrapperspb.StringValue)(nil),     // 19: google.protobuf.StringValue
	(*emptypb.Empty)(nil),              // 20: google.protobuf.Empty
}
var file_calendar_proto_depIdxs = []int32{
	1,  // 0: calendar_v1.GetCalendarsResponse.calendars:type_name -> calendar_v1.CalendarResponse
	19, // 1: calendar_v1.UpdateCalendarRequest.name:type_name -> google.protobuf.StringValue
	19, // 2: calendar_v1.CreateEventRequest.location:type_name -> google.protobuf.StringValue
	19, // 3: calendar_v1.EventResponse.location:type_name -> google.protobuf.StringValue
	19, // 4: calendar_v1.UpdateEventRequest.title:type_name -> google.protobuf.StringValue
	19, // 5: calendar_v1.UpdateEventRequest.description:type_name -> google.protobuf.StringValue
	19, // 6: calendar_v1.UpdateEventRequest.start_time:type_name -> google.protobuf.StringValue
	19, // 7: calendar_v1.UpdateEventRequest.end_time:type_name -> google.protobuf.StringValue
	19, // 8: calendar_v1.UpdateEventRequest.location:type_name -> google.protobuf.StringValue
	19, // 9: calendar_v1.UpdateEventRequest.category_id:type_name -> google.protobuf.StringValue
	8,  // 10: calendar_v1.GetEventsResponse.events:type_name -> calendar_v1.EventResponse
	19, // 11: calendar_v1.UpdateEventCategoryRequest.name:type_name -> google.protobuf.StringValue
	19, // 12: calendar_v1.UpdateEventCategoryRequest.color:type_name -> google.protobuf.StringValue
	14, // 13: calendar_v1.GetCategoriesResponse.categories:type_name -> calendar_v1.EventCategoryResponse
	0,  // 14: calendar_v1.CalendarService.CreateCalendar:input_type -> calendar_v1.CreateCalendarRequest
	2,  // 15: calendar_v1.CalendarService.GetCalendars:input_type -> calendar_v1.GetCalendarsRequest
	4,  // 16: calendar_v1.CalendarService.GetCalendarInfo:input_type -> calendar_v1.GetCalendarInfoRequest
	5,  // 17: calendar_v1.CalendarService.UpdateCalendar:input_type -> calendar_v1.UpdateCalendarRequest
	6,  // 18: calendar_v1.CalendarService.DeleteCalendar:input_type -> calendar_v1.DeleteCalendarRequest
	7,  // 19: calendar_v1.CalendarService.CreateEvent:input_type -> calendar_v1.CreateEventRequest
	9,  // 20: calendar_v1.CalendarService.UpdateEvent:input_type -> calendar_v1.UpdateEventRequest
	10, // 21: calendar_v1.CalendarService.DeleteEvent:input_type -> calendar_v1.DeleteEventRequest
	11, // 22: calendar_v1.CalendarService.GetEvents:input_type -> calendar_v1.GetEventsRequest
	13, // 23: calendar_v1.CalendarService.CreateCategory:input_type -> calendar_v1.CreateEventCategoryRequest
	15, // 24: calendar_v1.CalendarService.UpdateCategory:input_type -> calendar_v1.UpdateEventCategoryRequest
	16, // 25: calendar_v1.CalendarService.DeleteCategory:input_type -> calendar_v1.DeleteEventCategoryRequest
	17, // 26: calendar_v1.CalendarService.GetCategories:input_type -> calendar_v1.GetCategoriesRequest
	1,  // 27: calendar_v1.CalendarService.CreateCalendar:output_type -> calendar_v1.CalendarResponse
	3,  // 28: calendar_v1.CalendarService.GetCalendars:output_type -> calendar_v1.GetCalendarsResponse
	1,  // 29: calendar_v1.CalendarService.GetCalendarInfo:output_type -> calendar_v1.CalendarResponse
	1,  // 30: calendar_v1.CalendarService.UpdateCalendar:output_type -> calendar_v1.CalendarResponse
	20, // 31: calendar_v1.CalendarService.DeleteCalendar:output_type -> google.protobuf.Empty
	8,  // 32: calendar_v1.CalendarService.CreateEvent:output_type -> calendar_v1.EventResponse
	8,  // 33: calendar_v1.CalendarService.UpdateEvent:output_type -> calendar_v1.EventResponse
	20, // 34: calendar_v1.CalendarService.DeleteEvent:output_type -> google.protobuf.Empty
	12, // 35: calendar_v1.CalendarService.GetEvents:output_type -> calendar_v1.GetEventsResponse
	14, // 36: calendar_v1.CalendarService.CreateCategory:output_type -> calendar_v1.EventCategoryResponse
	14, // 37: calendar_v1.CalendarService.UpdateCategory:output_type -> calendar_v1.EventCategoryResponse
	20, // 38: calendar_v1.CalendarService.DeleteCategory:output_type -> google.protobuf.Empty
	18, // 39: calendar_v1.CalendarService.GetCategories:output_type -> calendar_v1.GetCategoriesResponse
	27, // [27:40] is the sub-list for method output_type
	14, // [14:27] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_calendar_proto_init() }
func file_calendar_proto_init() {
	if File_calendar_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_calendar_proto_rawDesc), len(file_calendar_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_calendar_proto_goTypes,
		DependencyIndexes: file_calendar_proto_depIdxs,
		MessageInfos:      file_calendar_proto_msgTypes,
	}.Build()
	File_calendar_proto = out.File
	file_calendar_proto_goTypes = nil
	file_calendar_proto_depIdxs = nil
}
